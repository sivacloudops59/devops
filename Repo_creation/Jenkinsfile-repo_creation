pipeline {
    agent any

    parameters {
        string(name: 'REPO_NAME', defaultValue: '', description: 'GitHub repository name')
        string(name: 'BRANCH_NAME', defaultValue: '', description: 'Branch to create')
    }

    environment {
        GITHUB_TOKEN = credentials('github_token')       // Jenkins credential ID
        GITHUB_USERNAME = 'sivacloudops59'
    }

    stages {
        stage('setup python environment') {
            steps {
                script {
                    sh '''
                        python3 -m venv venv
                        . venv/bin/activate
                        pip install requests
                    '''
                }
            }
        }
        stage('Create Repository') {
            steps {
                script {
                    try {
                        def outputlog = sh(script: """venv/bin/python Repo_creation/create_repo.py "$GITHUB_TOKEN" "${params.REPO_NAME}" """, returnStdout: true).trim()
                        echo "Repo Creation Output:\n${outputlog}"
                    } catch (e) {
                        echo " Error during repo creation: ${e}"
                        currentBuild.result = 'FAILURE'
                    }
                }
            }
        }
        stage('Create Branch') {
            steps {
                script {
                    try {
                        def outputlog = sh(script: """venv/bin/python Repo_creation/create_branch.py "$GITHUB_TOKEN" "${params.REPO_NAME}" "${params.BRANCH_NAME}" """, returnStdout: true).trim()
                        echo "Branch Creation Output:\n${outputlog}"
                    } catch (e) {
                        echo " Error during branch creation: ${e}"
                        currentBuild.result = 'FAILURE'
                    }
                }
            }
        }
    }
}
